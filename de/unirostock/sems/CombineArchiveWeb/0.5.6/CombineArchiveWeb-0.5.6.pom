<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.unirostock.sems</groupId>
    <artifactId>CombineArchiveWeb</artifactId>
    <packaging>war</packaging>
    <version>0.5.6</version>
    <name>CombineArchiveWeb</name>
    <description>WebInterface to read/create/write/manipulate/... COMBINE archives</description>
    <url>http://sems.uni-rostock.de/projects/combinearchive/</url>

    <developers>
        <developer>
            <name>Martin Scharm</name>
            <id>martin</id>
            <email>martin@binfalse.de</email>
            <roles>
                <role>Java Developer</role>
            </roles>
        </developer>
        <developer>
            <name>Martin Peters</name>
            <id>martinP</id>
            <email>martin@freakybytes.net</email>
            <roles>
                <role>Java Developer</role>
            </roles>
        </developer>
    </developers>

    <properties>

        <!-- gets overwritten when profile "release" is used -->
        <build.release>false</build.release>
        <build.version>${project.version}</build.version>

        <!-- the used java version -->
        <java.version>1.7</java.version>
        
        <!-- options for jdoc generation -->
        <jdoc.opts>-Xdoclint:none</jdoc.opts>
    </properties>

    <dependencies>
        <dependency>
            <groupId>de.unirostock.sems</groupId>
            <artifactId>CombineArchive</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>de.unirostock.sems</groupId>
            <artifactId>CombineExt</artifactId>
            <version>1.2.3</version>
        </dependency>
        <dependency>
            <groupId>de.binfalse</groupId>
            <artifactId>BFLog</artifactId>
            <version>1.3.3</version>
        </dependency>

        <!-- Git VersionControl -->
        <dependency>
            <groupId>org.eclipse.jgit</groupId>
            <artifactId>org.eclipse.jgit</artifactId>
            <version>3.7.0.201502260915-r</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <!-- Jersey for RESTful Api -->
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <!-- if your container implements Servlet API older than 3.0, use "jersey-container-servlet-core" -->
            <artifactId>jersey-container-servlet</artifactId>
            <version>2.9.1</version>
        </dependency>
        <!-- multipart form data -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
            <version>2.9.1</version>
        </dependency>
        <!-- Jackson for JSON Marshalling -->
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <version>2.9.1</version>
        </dependency>
        <!-- XML stuff -->
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom2</artifactId>
            <version>2.0.5</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpmime</artifactId>
            <version>4.3</version>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>sems-maven-repository-releases</id>
            <name>SEMS Maven Repo</name>
            <url>https://raw.github.com/SemsProject/maven-repository/raw/releases</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>sems-maven-repository-snapshots</id>
            <name>SEMS Maven Repo</name>
            <url>https://raw.github.com/SemsProject/maven-repository/raw/snapshots</url>
            <layout>default</layout>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>

        <repository>
            <id>java-public-repo</id>
            <name>Java Maven public</name>
            <url>https://maven.java.net/content/groups/public/</url>
        </repository>
    </repositories>

	<pluginRepositories>
		<!-- wagon-ssh -->
		<pluginRepository>
			<id>synergian-repo</id>
			<url>https://raw.github.com/synergian/wagon-git/releases</url>
		</pluginRepository>
	</pluginRepositories>

    <distributionManagement>
        <downloadUrl>https://raw.github.com/SemsProject/maven-repository/raw/</downloadUrl>
        <snapshotRepository>
            <uniqueVersion>true</uniqueVersion>
            <id>sems-maven-repository</id>
            <name>SEMS Maven Release Repository</name>
            <url>git:releases://git@github.com:SemsProject/maven-repository.git</url>
            <layout>default</layout>
        </snapshotRepository>

        <repository>
            <uniqueVersion>true</uniqueVersion>
            <id>sems-maven-repository</id>
            <name>SEMS Maven Snapshot Repository</name>
            <url>git:snapshots://git@github.com:SemsProject/maven-repository.git</url>
            <layout>default</layout>
        </repository>
    </distributionManagement>

    <build>
        <extensions>
            <!-- enable deployment via git -->
			<extension>
				<groupId>ar.com.synergian</groupId>
				<artifactId>wagon-git</artifactId>
				<version>0.3.0</version>
			</extension>
        </extensions>
        <resources>
            <resource>
                <targetPath>${project.build.outputDirectory}/res</targetPath>
                <directory>${basedir}/res</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- deployment profile -->
        <profile>
            <id>release</id>
            <properties>
                <build.release>true</build.release>
            </properties>
            <!-- build plugin configuration for the deploy -->
            <!-- not necessary to always nclude the sources and javadocs -->
            <build>
                <plugins>
                    <!-- attach sources -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>

                        <configuration>
                            <attach>true</attach>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- attach javadoc -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>2.9</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <failOnError>false</failOnError>
                            <additionalparam>${jdoc.opts}</additionalparam>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker</id>
            <activation>
                <file>
                    <exists>src/main/docker/Dockerfile</exists>
                </file>
            </activation>
            <properties>
                <build.release>true</build.release>
            </properties>

            <build>
                <plugins>

                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-resources</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>src/main/docker</directory>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <phase>deploy</phase>
                                <configuration>
                                    <target>
                                        <exec executable="docker">
                                            <arg value="build" />
                                            <arg value="-t" />
                                            <arg value="binfalse/webcat:${project.version}" />
                                            <arg value="target" />
                                        </exec>
                                        <exec executable="docker">
                                            <arg value="push" />
                                            <arg value="binfalse/webcat:${project.version}" />
                                        </exec>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

    </profiles>
</project>